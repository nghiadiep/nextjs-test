{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _icons, _colors;\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { itemStatuses } from '../contansts';\nvar todo = itemStatuses.todo,\n    inprogress = itemStatuses.inprogress,\n    done = itemStatuses.done,\n    deleted = itemStatuses.deleted,\n    canceled = itemStatuses.canceled;\nvar icons = (_icons = {}, _defineProperty(_icons, todo, 'assignment'), _defineProperty(_icons, inprogress, 'autorenew'), _defineProperty(_icons, done, 'assignment_turned_in'), _defineProperty(_icons, deleted, 'delete'), _defineProperty(_icons, canceled, 'cancel'), _icons);\nvar colors = (_colors = {}, _defineProperty(_colors, todo, 'grey'), _defineProperty(_colors, inprogress, 'blue'), _defineProperty(_colors, done, 'green'), _defineProperty(_colors, deleted, 'red'), _defineProperty(_colors, canceled, 'black'), _colors);\nexport default (function (_ref) {\n  var children = _ref.children,\n      status = _ref.status,\n      updateTask = _ref.updateTask,\n      id = _ref.id,\n      title = _ref.title;\n  return __jsx(React.Fragment, null, __jsx(\"li\", {\n    className: \"jsx-680200067\" + \" \" + \"task-list__item\"\n  }, __jsx(Icon, {\n    style: {\n      color: colors[status],\n      margin: 'auto 4px auto 0px'\n    }\n  }, icons[status]), __jsx(\"p\", {\n    className: \"jsx-680200067\" + \" \" + \"title\"\n  }, children), __jsx(\"div\", {\n    className: \"jsx-680200067\" + \" \" + \"btn-group\"\n  }, status === todo && __jsx(React.Fragment, null, __jsx(Button, {\n    type: \"button\",\n    onClick: function onClick() {\n      updateTask({\n        id: id,\n        title: title,\n        status: inprogress\n      });\n    },\n    color: \"primary\"\n  }, \"Start\"), __jsx(Button, {\n    type: \"button\",\n    onClick: function onClick() {\n      updateTask({\n        id: id,\n        title: title,\n        status: deleted\n      });\n    }\n  }, \"Delete\")), status === inprogress && __jsx(React.Fragment, null, __jsx(Button, {\n    type: \"button\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      updateTask({\n        id: id,\n        title: title,\n        status: done\n      });\n    }\n  }, \"Done\"), __jsx(Button, {\n    type: \"button\",\n    onClick: function onClick() {\n      updateTask({\n        id: id,\n        title: title,\n        status: canceled\n      });\n    }\n  }, \"Cancel\")), (status === done || status === canceled) && __jsx(React.Fragment, null, __jsx(Button, {\n    type: \"button\",\n    onClick: function onClick() {\n      updateTask({\n        id: id,\n        title: title,\n        status: deleted\n      });\n    }\n  }, \"Delete\")))), __jsx(_JSXStyle, {\n    id: \"680200067\"\n  }, [\".task-list__item.jsx-680200067{padding:4px 8px;margin:2px 0px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;background:#fff;}\", \".title.jsx-680200067{-webkit-flex:1;-ms-flex:1;flex:1;margin:auto 0;}\", \".btn-group.jsx-680200067{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\"]));\n});","map":null,"metadata":{},"sourceType":"module"}