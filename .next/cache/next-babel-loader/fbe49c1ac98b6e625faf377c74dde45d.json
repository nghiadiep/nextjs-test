{"ast":null,"code":"var _jsxFileName = \"/Users/trongnghiadieppham/Downloads/react-test/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport { useState } from 'react';\nimport TaskList from 'components/TaskList';\nimport TaskListItem from 'components/TaskListItem';\nimport TaskInput from 'components/TaskInput';\nexport default function Home() {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState([]);\n\n  const updateTask = ({\n    id,\n    title,\n    status\n  }) => {\n    const editedTask = {\n      id,\n      title,\n      status\n    };\n    const newTasks = tasks.map(item => item.id === editedTask.id ? Object.assign({}, item, editedTask) : Object.assign({}, item));\n    setTasks(newTasks);\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Todo Task Web App\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,400italic|Roboto+Mono:400,500|Material+Icons\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    style: {\n      maxWidth: '966px',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(TaskInput, {\n    onAdd: task => setTasks([...tasks, task]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(TaskList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, tasks.map(task => {\n    return __jsx(TaskListItem, {\n      key: task.id,\n      id: task.id,\n      status: task.status,\n      title: task.title,\n      updateTask: task => updateTask(task),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, task.title);\n  }))));\n}","map":{"version":3,"sources":["/Users/trongnghiadieppham/Downloads/react-test/pages/index.js"],"names":["Head","useState","TaskList","TaskListItem","TaskInput","Home","tasks","setTasks","updateTask","id","title","status","editedTask","newTasks","map","item","Object","assign","maxWidth","margin","task"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,UAAU,GAAG,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,GAAD,KAA2B;AAE5C,UAAMC,UAAU,GAAG;AACjBH,MAAAA,EADiB;AAEjBC,MAAAA,KAFiB;AAGjBC,MAAAA;AAHiB,KAAnB;AAMA,UAAME,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYG,UAAU,CAACH,EAAvB,GAA4BO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,EAAwBH,UAAxB,CAA5B,GAAkEI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,CAApF,CAAjB;AAEAR,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GAXD;;AAYA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AACE,IAAA,IAAI,EAAC,6GADP;AAEE,IAAA,GAAG,EAAC,YAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EASE;AAAM,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,MAAM,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAGC,IAAD,IAAUb,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWc,IAAX,CAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACQ,GAAN,CAAWM,IAAD,IAAU;AACnB,WACE,MAAC,YAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACX,EADZ;AAEE,MAAA,EAAE,EAAEW,IAAI,CAACX,EAFX;AAGE,MAAA,MAAM,EAAEW,IAAI,CAACT,MAHf;AAIE,MAAA,KAAK,EAAES,IAAI,CAACV,KAJd;AAKE,MAAA,UAAU,EAAEU,IAAI,IAAIZ,UAAU,CAACY,IAAD,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGA,IAAI,CAACV,KANR,CADF;AAUD,GAXA,CADH,CAFF,CATF,CADF;AA6BD","sourcesContent":["import Head from 'next/head'\nimport { useState } from 'react'\nimport TaskList from 'components/TaskList'\nimport TaskListItem from 'components/TaskListItem'\nimport TaskInput from 'components/TaskInput'\nexport default function Home() {\n  const [tasks, setTasks] = useState([])\n\n  const updateTask = ({ id, title, status }) => {\n\n    const editedTask = {\n      id,\n      title,\n      status,\n    }\n\n    const newTasks = tasks.map(item => item.id === editedTask.id ? Object.assign({}, item, editedTask) : Object.assign({}, item));\n\n    setTasks(newTasks)\n  }\n  return (\n    <div className='container'>\n      <Head>\n        <title>Todo Task Web App</title>\n        <link rel='icon' href='/favicon.ico' />\n        <link\n          href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,400italic|Roboto+Mono:400,500|Material+Icons'\n          rel='stylesheet'\n        />\n      </Head>\n      <main style={{ maxWidth: '966px', margin: 'auto' }}>\n        <TaskInput onAdd={(task) => setTasks([...tasks, task])} />\n        <TaskList>\n          {tasks.map((task) => {\n            return (\n              <TaskListItem\n                key={task.id}\n                id={task.id}\n                status={task.status}\n                title={task.title}\n                updateTask={task => updateTask(task)}>\n                {task.title}\n              </TaskListItem>\n            )\n          })}\n        </TaskList>\n      </main>\n    </div >\n  )\n}\n"]},"metadata":{},"sourceType":"module"}